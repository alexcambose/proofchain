{
  "contractName": "CertificateAuthorityOwnable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "certificateAuthorityManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCertificateAuthorityManagerContract",
      "outputs": [
        {
          "internalType": "contract CertificateAuthorityManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMasterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"certificateAuthorityManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertificateAuthorityManagerContract\",\"outputs\":[{\"internalType\":\"contract CertificateAuthorityManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMasterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregator()\":{\"details\":\"Returns the address of the current aggregator.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityOwnable.sol\":\"CertificateAuthorityOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alex/Desktop/proofchain/truffle/contracts/Aggregator.sol\":{\"keccak256\":\"0x8af4548f781676e3d1e5a23fb79f2e0f8373af0ba80b8d93196e0831750e688d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a654cfad32e96ca795dc7584b7092138777b2d9d357b1ba43592becf817ff353\",\"dweb:/ipfs/QmdXem134z8UWNRESJkrkxpDjJDLghVQUqMkPgYcBmhRZn\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/CertificateAuthorityManager.sol\":{\"keccak256\":\"0x6e087d83b253d347ab3a1d717b75436e41f0a4983db47bc0501b4ba883320feb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da60583efa0428dc24bd2a92d170b416fa62c1cfe7b6d71336cf5b61effd28ad\",\"dweb:/ipfs/QmT8tqXrhEZCNQVnCoYbETSTZv2ZfqWiQar8dRzw9hwZh1\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityManagerReferencer.sol\":{\"keccak256\":\"0xd965aea8527eba9045b8a36cf5be2d8fb79cb849e0a5bbdf3b554e6897e95c66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2b5ac0a57766202224dc864d646ad86571e7d82c43b192bb850e56e53fbc7ee\",\"dweb:/ipfs/QmWV6KXPo5uANNHpSd49m6AdhmQP73MdvhTxjGPGgVuivj\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityOwnable.sol\":{\"keccak256\":\"0x9de1af8564ec713597b09b0695f89a599cb0d6443ba7fee2ef79cf68a68a3851\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0f484d2d8200608ed2d5f9870ac2bca68e27ecae005a02bbd8bb70de7ddbd5d\",\"dweb:/ipfs/QmSkzzevb5Lt9dTTLjb1TALG7EiutCkVH4H6BpvPABtF67\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/utils/Ownable.sol\":{\"keccak256\":\"0xf5dcc7530c4e06117f93ee9609755485c1692f5d42f5d26dce3fefa9ac155275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://468615347ec32dd78d0160348c7d6b3b5afb64694b678849d951a708f6d66162\",\"dweb:/ipfs/QmXJrpMu2raCXRxi9fSEiTVgSXXfKMj2oABrt9h4ctLJ8g\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.7.0 <0.9.0;\n\nimport \"./CertificateAuthorityManagerReferencer.sol\";\n\nabstract contract CertificateAuthorityOwnable is CertificateAuthorityManagerReferencer {\n    modifier senderHasCertificateAuthority {\n        // require(\n        //     getCertificateAuthorityManagerContract()\n        //         .getCertificateAuthorityManager(msg.sender)\n        //         .isValue == true,\n        //     \"\"\n        // );\n        _;\n    }\n}\n",
  "sourcePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityOwnable.sol",
  "ast": {
    "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityOwnable.sol",
    "exportedSymbols": {
      "Aggregator": [
        63
      ],
      "CertificateAuthorityManager": [
        291
      ],
      "CertificateAuthorityManagerReferencer": [
        2147
      ],
      "CertificateAuthorityOwnable": [
        2157
      ],
      "Ownable": [
        2527
      ]
    },
    "id": 2158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2149,
        "literals": [
          "solidity",
          ">",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:30:10"
      },
      {
        "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityManagerReferencer.sol",
        "file": "./CertificateAuthorityManagerReferencer.sol",
        "id": 2150,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2158,
        "sourceUnit": 2148,
        "src": "64:53:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2151,
              "name": "CertificateAuthorityManagerReferencer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2147,
              "src": "168:37:10"
            },
            "id": 2152,
            "nodeType": "InheritanceSpecifier",
            "src": "168:37:10"
          }
        ],
        "contractDependencies": [
          2147,
          2527
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 2157,
        "linearizedBaseContracts": [
          2157,
          2147,
          2527
        ],
        "name": "CertificateAuthorityOwnable",
        "nameLocation": "137:27:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "251:226:10",
              "statements": [
                {
                  "id": 2154,
                  "nodeType": "PlaceholderStatement",
                  "src": "469:1:10"
                }
              ]
            },
            "id": 2156,
            "name": "senderHasCertificateAuthority",
            "nameLocation": "221:29:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:0:10"
            },
            "src": "212:265:10",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2158,
        "src": "119:360:10"
      }
    ],
    "src": "32:448:10"
  },
  "legacyAST": {
    "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityOwnable.sol",
    "exportedSymbols": {
      "Aggregator": [
        63
      ],
      "CertificateAuthorityManager": [
        291
      ],
      "CertificateAuthorityManagerReferencer": [
        2147
      ],
      "CertificateAuthorityOwnable": [
        2157
      ],
      "Ownable": [
        2527
      ]
    },
    "id": 2158,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2149,
        "literals": [
          "solidity",
          ">",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:30:10"
      },
      {
        "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityManagerReferencer.sol",
        "file": "./CertificateAuthorityManagerReferencer.sol",
        "id": 2150,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2158,
        "sourceUnit": 2148,
        "src": "64:53:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2151,
              "name": "CertificateAuthorityManagerReferencer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2147,
              "src": "168:37:10"
            },
            "id": 2152,
            "nodeType": "InheritanceSpecifier",
            "src": "168:37:10"
          }
        ],
        "contractDependencies": [
          2147,
          2527
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 2157,
        "linearizedBaseContracts": [
          2157,
          2147,
          2527
        ],
        "name": "CertificateAuthorityOwnable",
        "nameLocation": "137:27:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "251:226:10",
              "statements": [
                {
                  "id": 2154,
                  "nodeType": "PlaceholderStatement",
                  "src": "469:1:10"
                }
              ]
            },
            "id": 2156,
            "name": "senderHasCertificateAuthority",
            "nameLocation": "221:29:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:0:10"
            },
            "src": "212:265:10",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2158,
        "src": "119:360:10"
      }
    ],
    "src": "32:448:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-09T12:23:37.690Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "aggregator()": {
        "details": "Returns the address of the current aggregator."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}