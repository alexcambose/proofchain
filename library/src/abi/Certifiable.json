{
  "contractName": "Certifiable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "certificateAuthorityManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCertificateAuthorityManagerContract",
      "outputs": [
        {
          "internalType": "contract CertificateAuthorityManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMasterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_certificateCode",
          "type": "uint256"
        }
      ],
      "name": "assignCertificate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_certificateCode",
          "type": "uint256"
        }
      ],
      "name": "cancelCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeCertificate",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_certificateCode\",\"type\":\"uint256\"}],\"name\":\"assignCertificate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_certificateCode\",\"type\":\"uint256\"}],\"name\":\"cancelCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"certificateAuthorityManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertificateAuthorityManagerContract\",\"outputs\":[{\"internalType\":\"contract CertificateAuthorityManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMasterAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeCertificate\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregator()\":{\"details\":\"Returns the address of the current aggregator.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/alex/Desktop/proofchain/truffle/contracts/Certifiable.sol\":\"Certifiable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alex/Desktop/proofchain/truffle/contracts/Aggregator.sol\":{\"keccak256\":\"0x8af4548f781676e3d1e5a23fb79f2e0f8373af0ba80b8d93196e0831750e688d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a654cfad32e96ca795dc7584b7092138777b2d9d357b1ba43592becf817ff353\",\"dweb:/ipfs/QmdXem134z8UWNRESJkrkxpDjJDLghVQUqMkPgYcBmhRZn\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/Certifiable.sol\":{\"keccak256\":\"0xd64bd410537d22c39f94cc43a27516ac35fdb32735e1cf88e66abc6482c22ed3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27394163c6c544b40a90103bc3871aa1be13a2f164e6ce38e6a93f87dbf74981\",\"dweb:/ipfs/QmVWPRrrPznH9Y3UhgRoPJGDoiZ3fibonPZU6ZuksUtxns\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/CertificateAuthorityManager.sol\":{\"keccak256\":\"0x6e087d83b253d347ab3a1d717b75436e41f0a4983db47bc0501b4ba883320feb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da60583efa0428dc24bd2a92d170b416fa62c1cfe7b6d71336cf5b61effd28ad\",\"dweb:/ipfs/QmT8tqXrhEZCNQVnCoYbETSTZv2ZfqWiQar8dRzw9hwZh1\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityManagerReferencer.sol\":{\"keccak256\":\"0xd965aea8527eba9045b8a36cf5be2d8fb79cb849e0a5bbdf3b554e6897e95c66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2b5ac0a57766202224dc864d646ad86571e7d82c43b192bb850e56e53fbc7ee\",\"dweb:/ipfs/QmWV6KXPo5uANNHpSd49m6AdhmQP73MdvhTxjGPGgVuivj\"]},\"/home/alex/Desktop/proofchain/truffle/contracts/utils/Ownable.sol\":{\"keccak256\":\"0xf5dcc7530c4e06117f93ee9609755485c1692f5d42f5d26dce3fefa9ac155275\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://468615347ec32dd78d0160348c7d6b3b5afb64694b678849d951a708f6d66162\",\"dweb:/ipfs/QmXJrpMu2raCXRxi9fSEiTVgSXXfKMj2oABrt9h4ctLJ8g\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >0.7.0 <0.9.0;\nimport './utils/CertificateAuthorityManagerReferencer.sol';\n\nabstract contract Certifiable is CertificateAuthorityManagerReferencer {\n    function assignCertificate(uint256 _certificateCode) public payable {\n        CertificateAuthorityManager cam = getCertificateAuthorityManagerContract();\n        (, address certificateAuthority) = cam.authorityCertificates(_certificateCode);\n\n        require(\n            certificateAuthority == msg.sender,\n            'You need to be the owner of the certificate authority in order to assign it'\n        );\n        require(\n            msg.value >= cam.minimumStake(),\n            'Received payment is lower that the minimum stake'\n        );\n    }\n\n    function cancelCertificate(uint256 _certificateCode) public {\n        CertificateAuthorityManager cam = getCertificateAuthorityManagerContract();\n        (, address certificateAuthority) = cam.authorityCertificates(_certificateCode);\n\n        require(\n            certificateAuthority == msg.sender,\n            'You need to be the owner of the certificate authority in order to assign it'\n        );\n    }\n\n    function revokeCertificate() public view {\n        require(\n            getMasterAddress() == msg.sender,\n            'You need to be the owner of the factory in order to revoke it'\n        );\n    }\n}\n",
  "sourcePath": "/home/alex/Desktop/proofchain/truffle/contracts/Certifiable.sol",
  "ast": {
    "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/Certifiable.sol",
    "exportedSymbols": {
      "Aggregator": [
        63
      ],
      "Certifiable": [
        146
      ],
      "CertificateAuthorityManager": [
        291
      ],
      "CertificateAuthorityManagerReferencer": [
        2147
      ],
      "Ownable": [
        2527
      ]
    },
    "id": 147,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          ">",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:30:1"
      },
      {
        "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityManagerReferencer.sol",
        "file": "./utils/CertificateAuthorityManagerReferencer.sol",
        "id": 66,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 2148,
        "src": "63:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 67,
              "name": "CertificateAuthorityManagerReferencer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2147,
              "src": "157:37:1"
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "157:37:1"
          }
        ],
        "contractDependencies": [
          2147,
          2527
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 146,
        "linearizedBaseContracts": [
          146,
          2147,
          2527
        ],
        "name": "Certifiable",
        "nameLocation": "142:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "269:482:1",
              "statements": [
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "cam",
                      "nameLocation": "307:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "279:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                        "typeString": "contract CertificateAuthorityManager"
                      },
                      "typeName": {
                        "id": 74,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 73,
                          "name": "CertificateAuthorityManager",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 291,
                          "src": "279:27:1"
                        },
                        "referencedDeclaration": 291,
                        "src": "279:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76,
                      "name": "getCertificateAuthorityManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "313:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_CertificateAuthorityManager_$291_$",
                        "typeString": "function () returns (contract CertificateAuthorityManager)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                      "typeString": "contract CertificateAuthorityManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "279:74:1"
                },
                {
                  "assignments": [
                    null,
                    80
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "certificateAuthority",
                      "nameLocation": "374:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "366:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "366:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "_certificateCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "424:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81,
                        "name": "cam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "398:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorityCertificates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "398:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "function (uint256) view external returns (string memory,address)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "363:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87,
                          "name": "certificateAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "473:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 88,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "497:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "497:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "473:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20626520746865206f776e6572206f662074686520636572746966696361746520617574686f7269747920696e206f7264657220746f2061737369676e206974",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "521:77:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        },
                        "value": "You need to be the owner of the certificate authority in order to assign it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "452:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "452:156:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "452:156:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "639:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "639:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 97,
                              "name": "cam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "652:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                                "typeString": "contract CertificateAuthorityManager"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minimumStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 190,
                            "src": "652:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "652:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "639:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265636569766564207061796d656e74206973206c6f776572207468617420746865206d696e696d756d207374616b65",
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "684:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_143afda1f696505e5c14171cdf624a0809675d961162838be6c90a09ec7bf678",
                          "typeString": "literal_string \"Received payment is lower that the minimum stake\""
                        },
                        "value": "Received payment is lower that the minimum stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_143afda1f696505e5c14171cdf624a0809675d961162838be6c90a09ec7bf678",
                          "typeString": "literal_string \"Received payment is lower that the minimum stake\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "618:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:126:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "618:126:1"
                }
              ]
            },
            "functionSelector": "97e4c49f",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignCertificate",
            "nameLocation": "210:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_certificateCode",
                  "nameLocation": "236:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "228:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "227:26:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:1"
            },
            "scope": 146,
            "src": "201:550:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "817:346:1",
              "statements": [
                {
                  "assignments": [
                    112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "cam",
                      "nameLocation": "855:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "827:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                        "typeString": "contract CertificateAuthorityManager"
                      },
                      "typeName": {
                        "id": 111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 110,
                          "name": "CertificateAuthorityManager",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 291,
                          "src": "827:27:1"
                        },
                        "referencedDeclaration": 291,
                        "src": "827:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 115,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 113,
                      "name": "getCertificateAuthorityManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "861:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_CertificateAuthorityManager_$291_$",
                        "typeString": "function () returns (contract CertificateAuthorityManager)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                      "typeString": "contract CertificateAuthorityManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "827:74:1"
                },
                {
                  "assignments": [
                    null,
                    117
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 117,
                      "mutability": "mutable",
                      "name": "certificateAuthority",
                      "nameLocation": "922:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "914:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 116,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "914:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "_certificateCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "972:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "cam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "946:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorityCertificates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "946:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "function (uint256) view external returns (string memory,address)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "911:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 124,
                          "name": "certificateAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1021:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1045:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1045:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1021:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20626520746865206f776e6572206f662074686520636572746966696361746520617574686f7269747920696e206f7264657220746f2061737369676e206974",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:77:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        },
                        "value": "You need to be the owner of the certificate authority in order to assign it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1000:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:156:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:156:1"
                }
              ]
            },
            "functionSelector": "0dfdfccd",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelCertificate",
            "nameLocation": "766:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_certificateCode",
                  "nameLocation": "792:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "784:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:26:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "817:0:1"
            },
            "scope": 146,
            "src": "757:406:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1210:157:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 136,
                            "name": "getMasterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2146,
                            "src": "1241:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1241:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 138,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1263:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1263:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1241:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20626520746865206f776e6572206f662074686520666163746f727920696e206f7264657220746f207265766f6b65206974",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_604cefbf467131999a7f1bc98c0c1f1ff4700fbddaf0ae105b839076aff29027",
                          "typeString": "literal_string \"You need to be the owner of the factory in order to revoke it\""
                        },
                        "value": "You need to be the owner of the factory in order to revoke it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_604cefbf467131999a7f1bc98c0c1f1ff4700fbddaf0ae105b839076aff29027",
                          "typeString": "literal_string \"You need to be the owner of the factory in order to revoke it\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1220:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:140:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:140:1"
                }
              ]
            },
            "functionSelector": "14e6047c",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeCertificate",
            "nameLocation": "1178:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:1"
            },
            "scope": 146,
            "src": "1169:198:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "124:1245:1"
      }
    ],
    "src": "32:1338:1"
  },
  "legacyAST": {
    "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/Certifiable.sol",
    "exportedSymbols": {
      "Aggregator": [
        63
      ],
      "Certifiable": [
        146
      ],
      "CertificateAuthorityManager": [
        291
      ],
      "CertificateAuthorityManagerReferencer": [
        2147
      ],
      "Ownable": [
        2527
      ]
    },
    "id": 147,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          ">",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:30:1"
      },
      {
        "absolutePath": "/home/alex/Desktop/proofchain/truffle/contracts/utils/CertificateAuthorityManagerReferencer.sol",
        "file": "./utils/CertificateAuthorityManagerReferencer.sol",
        "id": 66,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 147,
        "sourceUnit": 2148,
        "src": "63:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 67,
              "name": "CertificateAuthorityManagerReferencer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2147,
              "src": "157:37:1"
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "157:37:1"
          }
        ],
        "contractDependencies": [
          2147,
          2527
        ],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 146,
        "linearizedBaseContracts": [
          146,
          2147,
          2527
        ],
        "name": "Certifiable",
        "nameLocation": "142:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "269:482:1",
              "statements": [
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "cam",
                      "nameLocation": "307:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "279:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                        "typeString": "contract CertificateAuthorityManager"
                      },
                      "typeName": {
                        "id": 74,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 73,
                          "name": "CertificateAuthorityManager",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 291,
                          "src": "279:27:1"
                        },
                        "referencedDeclaration": 291,
                        "src": "279:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 76,
                      "name": "getCertificateAuthorityManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "313:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_CertificateAuthorityManager_$291_$",
                        "typeString": "function () returns (contract CertificateAuthorityManager)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                      "typeString": "contract CertificateAuthorityManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "279:74:1"
                },
                {
                  "assignments": [
                    null,
                    80
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "certificateAuthority",
                      "nameLocation": "374:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "366:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "366:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83,
                        "name": "_certificateCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "424:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 81,
                        "name": "cam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "398:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorityCertificates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "398:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "function (uint256) view external returns (string memory,address)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "398:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "363:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87,
                          "name": "certificateAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "473:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 88,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "497:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "497:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "473:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20626520746865206f776e6572206f662074686520636572746966696361746520617574686f7269747920696e206f7264657220746f2061737369676e206974",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "521:77:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        },
                        "value": "You need to be the owner of the certificate authority in order to assign it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        }
                      ],
                      "id": 86,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "452:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "452:156:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "452:156:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "639:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "639:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 97,
                              "name": "cam",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "652:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                                "typeString": "contract CertificateAuthorityManager"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "minimumStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 190,
                            "src": "652:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "652:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "639:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265636569766564207061796d656e74206973206c6f776572207468617420746865206d696e696d756d207374616b65",
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "684:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_143afda1f696505e5c14171cdf624a0809675d961162838be6c90a09ec7bf678",
                          "typeString": "literal_string \"Received payment is lower that the minimum stake\""
                        },
                        "value": "Received payment is lower that the minimum stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_143afda1f696505e5c14171cdf624a0809675d961162838be6c90a09ec7bf678",
                          "typeString": "literal_string \"Received payment is lower that the minimum stake\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "618:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "618:126:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "618:126:1"
                }
              ]
            },
            "functionSelector": "97e4c49f",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assignCertificate",
            "nameLocation": "210:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_certificateCode",
                  "nameLocation": "236:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "228:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "227:26:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:1"
            },
            "scope": 146,
            "src": "201:550:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "817:346:1",
              "statements": [
                {
                  "assignments": [
                    112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "cam",
                      "nameLocation": "855:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "827:31:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                        "typeString": "contract CertificateAuthorityManager"
                      },
                      "typeName": {
                        "id": 111,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 110,
                          "name": "CertificateAuthorityManager",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 291,
                          "src": "827:27:1"
                        },
                        "referencedDeclaration": 291,
                        "src": "827:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 115,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 113,
                      "name": "getCertificateAuthorityManagerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2133,
                      "src": "861:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_contract$_CertificateAuthorityManager_$291_$",
                        "typeString": "function () returns (contract CertificateAuthorityManager)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                      "typeString": "contract CertificateAuthorityManager"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "827:74:1"
                },
                {
                  "assignments": [
                    null,
                    117
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 117,
                      "mutability": "mutable",
                      "name": "certificateAuthority",
                      "nameLocation": "922:20:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "914:28:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 116,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "914:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "_certificateCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "972:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 118,
                        "name": "cam",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "946:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CertificateAuthorityManager_$291",
                          "typeString": "contract CertificateAuthorityManager"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authorityCertificates",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 176,
                      "src": "946:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "function (uint256) view external returns (string memory,address)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "tuple(string memory,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "911:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 124,
                          "name": "certificateAuthority",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1021:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1045:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1045:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1021:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20626520746865206f776e6572206f662074686520636572746966696361746520617574686f7269747920696e206f7264657220746f2061737369676e206974",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1069:77:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        },
                        "value": "You need to be the owner of the certificate authority in order to assign it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_772c352e9b4c4d7d9eaa4ad8d92a2d81fb81bb4332f3ab09886ef65bb23cb655",
                          "typeString": "literal_string \"You need to be the owner of the certificate authority in order to assign it\""
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1000:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1000:156:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1000:156:1"
                }
              ]
            },
            "functionSelector": "0dfdfccd",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelCertificate",
            "nameLocation": "766:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "_certificateCode",
                  "nameLocation": "792:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "784:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:26:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "817:0:1"
            },
            "scope": 146,
            "src": "757:406:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1210:157:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 136,
                            "name": "getMasterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2146,
                            "src": "1241:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1241:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 138,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1263:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1263:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1241:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20626520746865206f776e6572206f662074686520666163746f727920696e206f7264657220746f207265766f6b65206974",
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_604cefbf467131999a7f1bc98c0c1f1ff4700fbddaf0ae105b839076aff29027",
                          "typeString": "literal_string \"You need to be the owner of the factory in order to revoke it\""
                        },
                        "value": "You need to be the owner of the factory in order to revoke it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_604cefbf467131999a7f1bc98c0c1f1ff4700fbddaf0ae105b839076aff29027",
                          "typeString": "literal_string \"You need to be the owner of the factory in order to revoke it\""
                        }
                      ],
                      "id": 135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1220:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:140:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:140:1"
                }
              ]
            },
            "functionSelector": "14e6047c",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeCertificate",
            "nameLocation": "1178:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:2:1"
            },
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:1"
            },
            "scope": 146,
            "src": "1169:198:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "124:1245:1"
      }
    ],
    "src": "32:1338:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-09T12:23:37.647Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "aggregator()": {
        "details": "Returns the address of the current aggregator."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}